<?php
/*
 * LaraClassifier - Classified Ads Web Application
 * Copyright (c) BeDigit. All Rights Reserved
 *
 * Website: https://laraclassifier.com
 * Author: BeDigit | https://bedigit.com
 *
 * LICENSE
 * -------
 * This software is furnished under a license and may be used and copied
 * only in accordance with the terms of such license and with the inclusion
 * of the above copyright notice. If you Purchased from CodeCanyon,
 * Please read the full License from here - https://codecanyon.net/licenses/standard
 */

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Api\Auth\Traits\VerificationTrait;
use App\Http\Controllers\Api\User\Delete;
use App\Http\Controllers\Api\User\Stats;
use App\Http\Controllers\Api\User\Update\Photo;
use App\Http\Controllers\Api\User\Register;
use App\Http\Controllers\Api\User\Update;
use App\Http\Requests\Front\AvatarRequest;
use App\Http\Requests\Front\UserRequest;
use App\Http\Resources\EntityCollection;
use App\Http\Resources\UserResource;
use App\Models\Scopes\ReviewedScope;
use App\Models\Scopes\StrictActiveScope;
use App\Models\Scopes\VerifiedScope;
use App\Models\User;
use Illuminate\Http\Request;

/**
 * @group Users
 */
class UserController extends BaseController
{
	use Register, Update, VerificationTrait, Photo, Delete, Stats;
	
	/**
	 * List users
	 *
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function index(): \Illuminate\Http\JsonResponse
	{
		/*
		$users = User::paginate($this->perPage);
		$resourceCollection = new EntityCollection(class_basename($this), $users);
		
		return apiResponse()->withCollection($resourceCollection);
		*/
		
		return apiResponse()->forbidden();
	}
	
	/**
	 * Store user
	 *
	 * @bodyParam country_code string required The code of the user's country. Example: US
	 * @bodyParam language_code string The code of the user's spoken language. Example: en
	 * @bodyParam user_type_id int The ID of user type. Example: 1
	 * @bodyParam gender_id int The ID of gender. Example: 1
	 * @bodyParam name string required The name of the user. Example: John Doe
	 * @bodyParam photo file The file of user photo.
	 * @bodyParam auth_field string required The user's auth field ('email' or 'phone'). Example: email
	 * @bodyParam email string The user's email address (Required when 'auth_field' value is 'email'). Example: john.doe@domain.tld
	 * @bodyParam phone string The mobile phone number of the user (Required when 'auth_field' value is 'phone'). Example: +17656766467
	 * @bodyParam phone_country string required The user's phone number's country code (Required when the 'phone' field is filled). Example: null
	 * @bodyParam phone_hidden boolean Field to hide or show the user phone number in public. Example: 0
	 * @bodyParam username string The user's username. Example: john_doe
	 * @bodyParam password string required The user's password. Example: js!X07$z61hLA
	 * @bodyParam password_confirmation string required The confirmation of the user's password. Example: js!X07$z61hLA
	 * @bodyParam disable_comments boolean Field to disable or enable comments on the user's listings. Example: 1
	 * @bodyParam create_from_ip string required The user's IP address. Example: 127.0.0.1
	 * @bodyParam accept_terms boolean required Field to allow user to accept or not the website terms. Example: 1
	 * @bodyParam accept_marketing_offers boolean Field to allow user to accept or not marketing offers sending. Example: 0
	 * @bodyParam time_zone string The user's time zone. Example: America/New_York
	 * @bodyParam captcha_key string Key generated by the CAPTCHA endpoint calling (Required when the CAPTCHA verification is enabled from the Admin panel).
	 *
	 * @param \App\Http\Requests\Front\UserRequest $request
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function store(UserRequest $request): \Illuminate\Http\JsonResponse
	{
		return $this->register($request);
	}
	
	/**
	 * Get user
	 *
	 * @authenticated
	 *
	 * @queryParam embed string Comma-separated list of the post relationships for Eager Loading - Possible values: country,userType,gender,countPostsViews,countPosts,countSavedPosts. Example: null
	 *
	 * @urlParam id int required The user's ID. Example: 3
	 *
	 * @param $id
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function show($id): \Illuminate\Http\JsonResponse
	{
		$embed = explode(',', request()->query('embed'));
		
		$user = User::query()->verified();
		
		if (in_array('country', $embed)) {
			$user->with('country');
		}
		if (in_array('userType', $embed)) {
			$user->with('userType');
		}
		if (in_array('gender', $embed)) {
			$user->with('gender');
		}
		if (in_array('payment', $embed)) {
			$user->with(['payment' => function ($query) {
				$query->withoutGlobalScope(StrictActiveScope::class);
			}]);
			if (in_array('package', $embed)) {
				$user->with('payment.package');
			}
		}
		if (in_array('possiblePayment', $embed)) {
			$user->with(['possiblePayment']);
			if (in_array('package', $embed)) {
				$user->with('possiblePayment.package');
			}
		}
		if (in_array('posts', $embed) || in_array('countPosts', $embed)) {
			$postScopes = [VerifiedScope::class, ReviewedScope::class];
			$user->with(['posts' => fn ($q) => $q->withoutGlobalScopes($postScopes)->unarchived()]);
		}
		if (in_array('postsInCountry', $embed) || in_array('countPostsInCountry', $embed)) {
			$user->with('postsInCountry');
		}
		
		$user = $user->find($id);
		
		abort_if(empty($user), 404, t('user_not_found'));
		
		$resource = new UserResource($user);
		
		return apiResponse()->withResource($resource);
	}
	
	/**
	 * Update user
	 *
	 * @authenticated
	 * @header Authorization Bearer {YOUR_AUTH_TOKEN}
	 *
	 * @bodyParam country_code string required The code of the user's country. Example: US
	 * @bodyParam language_code string The code of the user's spoken language. Example: en
	 * @bodyParam user_type_id int The ID of user type. Example: 1
	 * @bodyParam gender_id int The ID of gender. Example: 1
	 * @bodyParam name string required The name of the user. Example: John Doe
	 * @bodyParam photo file The file of user photo.
	 * @bodyParam remove_photo int Enable the user photo removal ('0' or '1'). When its value is '1' the user's photo file will be removed and the 'photo' column will be empty. Example: 0.
	 * @bodyParam auth_field string required The user's auth field ('email' or 'phone'). Example: email
	 * @bodyParam email string required The user's email address (Required when 'auth_field' value is 'email'). Example: john.doe@domain.tld
	 * @bodyParam phone string The mobile phone number of the user (Required when 'auth_field' value is 'phone'). Example: +17656766467
	 * @bodyParam phone_country string required The user's phone number's country code (Required when the 'phone' field is filled). Example: null
	 * @bodyParam phone_hidden boolean Field to hide or show the user phone number in public. Example: 0
	 * @bodyParam username string The user's username. Example: john_doe
	 * @bodyParam password string required The user's password. Example: js!X07$z61hLA
	 * @bodyParam password_confirmation string required The confirmation of the user's password. Example: js!X07$z61hLA
	 * @bodyParam disable_comments boolean Field to disable or enable comments on the user's listings. Example: 1
	 * @bodyParam latest_update_ip string required The user's IP address. Example: 127.0.0.1
	 * @bodyParam accept_terms boolean required Field to allow user to accept or not the website terms. Example: 1
	 * @bodyParam accept_marketing_offers boolean Field to allow user to accept or not marketing offers sending. Example: 0
	 * @bodyParam time_zone string The user's time zone. Example: America/New_York
	 *
	 * @param $id
	 * @param \App\Http\Requests\Front\UserRequest $request
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function update($id, UserRequest $request): \Illuminate\Http\JsonResponse
	{
		return $this->updateDetails($id, $request);
	}
	
	/**
	 * Delete user
	 *
	 * @authenticated
	 * @header Authorization Bearer {YOUR_AUTH_TOKEN}
	 *
	 * @param $id
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function destroy($id): \Illuminate\Http\JsonResponse
	{
		return $this->closeAccount($id);
	}
	
	/**
	 * User's mini stats
	 *
	 * @authenticated
	 * @header Authorization Bearer {YOUR_AUTH_TOKEN}
	 *
	 * @urlParam id int required The user's ID. Example: 3
	 *
	 * @param $id
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function stats($id): \Illuminate\Http\JsonResponse
	{
		return $this->getStats($id);
	}
	
	/**
	 * Update user's photo
	 *
	 * @authenticated
	 * @header Authorization Bearer {YOUR_AUTH_TOKEN}
	 *
	 * @urlParam userId int required The user's ID. Example: 3
	 * @bodyParam latest_update_ip string required The user's IP address. Example: 127.0.0.1
	 *
	 * @param $userId
	 * @param \App\Http\Requests\Front\AvatarRequest $request
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function updatePhoto($userId, AvatarRequest $request): \Illuminate\Http\JsonResponse
	{
		return $this->updateUserPhoto($userId, $request);
	}
	
	/**
	 * Delete user's photo
	 *
	 * @authenticated
	 * @header Authorization Bearer {YOUR_AUTH_TOKEN}
	 *
	 * @urlParam userId int required The user's ID. Example: 3
	 *
	 * @param $userId
	 * @param \Illuminate\Http\Request $request
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function removePhoto($userId, Request $request): \Illuminate\Http\JsonResponse
	{
		return $this->removeUserPhoto($userId, $request);
	}
}
