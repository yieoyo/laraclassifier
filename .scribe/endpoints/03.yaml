name: Listings
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/postTypes
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List listing types'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"data":[{"id":1,"name":"Private individual","active":1},{"id":2,"name":"Professional","active":1}]}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/postTypes/{id}'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get listing type'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The listing type's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":1,"name":"Private individual","active":1}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reportTypes
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List report types'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"data":[{"id":1,"name":"Fraud"},{"id":2,"name":"Duplicate"},{"id":3,"name":"Spam"},{"id":4,"name":"Wrong category"},{"id":5,"name":"Other"}]}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/reportTypes/{id}'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get report type'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The report type's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":1,"name":"Fraud"}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{id}/fields/post/{postId}'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get Post's Custom Fields Values"
      description: "Note: Called when displaying the Post's details"
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      postId:
        name: postId
        description: ''
        required: true
        example: '219'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
      postId: '219'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"global.no_post_fields_found","result":{"data":[]}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List listings'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      op:
        name: op
        description: 'Type of listings list (optional) - Possible value: search,premium,latest,free,premiumFirst,similar.'
        required: false
        example: 'null'
        type: string
        enumValues: []
        custom: []
      postId:
        name: postId
        description: "Base Listing's ID to get similar listings (optional) - Mandatory to get similar listings (when op=similar)."
        required: false
        example: 0
        type: integer
        enumValues: []
        custom: []
      distance:
        name: distance
        description: "Distance to get similar listings (optional) - Also optional when the type of similar listings is based on the current listing's category. Mandatory when the type of similar listings is based on the current listing's location. So, its usage is limited to get similar listings (when op=similar) based on the current listing's location."
        required: false
        example: 0
        type: integer
        enumValues: []
        custom: []
      belongLoggedUser:
        name: belongLoggedUser
        description: 'Force users to be logged to get data that belongs to him. Authentication token needs to be sent in the header, and the "op" parameter needs to be null or unset - Possible value: 0 or 1.'
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      pendingApproval:
        name: pendingApproval
        description: 'To list a user''s listings in pending approval. Authentication token needs to be sent in the header, and the "op" parameter needs to be null or unset - Possible value: 0 or 1.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      archived:
        name: archived
        description: 'To list a user''s archived listings. Authentication token needs to be sent in the header, and the "op" parameter need be null or unset - Possible value: 0 or 1.'
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: user,category,parent,postType,city,currency,savedByLoggedUser,pictures,payment,package.'
        required: false
        example: 'null'
        type: string
        enumValues: []
        custom: []
      sort:
        name: sort
        description: 'The sorting parameter (Order by DESC with the given column. Use "-" as prefix to order by ASC). Possible values: created_at.'
        required: false
        example: created_at
        type: string
        enumValues: []
        custom: []
      perPage:
        name: perPage
        description: 'Items per page. Can be defined globally from the admin settings. Cannot be exceeded 100.'
        required: false
        example: 2
        type: integer
        enumValues: []
        custom: []
    cleanQueryParameters:
      op: 'null'
      postId: 0
      distance: 0
      belongLoggedUser: true
      pendingApproval: false
      archived: true
      embed: 'null'
      sort: created_at
      perPage: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthorized","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get listing'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post/listing's ID."
        required: true
        example: 2
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters:
      unactivatedIncluded:
        name: unactivatedIncluded
        description: 'Include or not unactivated entries - Possible value: 0 or 1.'
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      belongLoggedUser:
        name: belongLoggedUser
        description: 'Force users to be logged to get data that belongs to him - Possible value: 0 or 1.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      noCache:
        name: noCache
        description: 'Disable the cache for this request - Possible value: 0 or 1.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: user,category,parent,postType,city,currency,savedByLoggedUser,pictures,payment,package,fieldsValues.'
        required: false
        example: 'user,postType'
        type: string
        enumValues: []
        custom: []
      detailed:
        name: detailed
        description: "Allow getting the listing's details with all its relationships (No need to set the 'embed' parameter)."
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
    cleanQueryParameters:
      unactivatedIncluded: true
      belongLoggedUser: false
      noCache: false
      embed: 'user,postType'
      detailed: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":2,"country_code":"US","user_id":2,"payment_id":null,"category_id":75,"post_type_id":2,"title":"ASAP: Electrician","description":"Fugiat ut quo a quam nulla rem. Et delectus cupiditate ut mollitia dolor omnis. Vitae quia voluptas ad sed. Asperiores nesciunt sunt sequi laudantium corrupti. Est eveniet laborum quae dicta omnis omnis. Dolores iste qui aut rerum quibusdam. Occaecati veritatis in dolore totam est. Officiis voluptates ea qui. Eum quisquam cum consequatur sit sunt molestias. Distinctio labore nesciunt quis sit inventore dolor delectus. Enim sit explicabo consequatur consequatur.","tags":["nesciunt","perspiciatis","unde"],"price":"34.00","currency_code":null,"negotiable":0,"contact_name":"Admin Demo","auth_field":"email","email":"admin@demosite.com","phone":"3581876675678","phone_national":"3581876675678","phone_country":"US","phone_hidden":0,"address":null,"city_id":43818,"lat":27.6,"lon":-81.51,"create_from_ip":"92.151.115.194","latest_update_ip":null,"visits":16097,"tmp_token":null,"email_token":null,"phone_token":"demoFaker","email_verified_at":"2023-11-16T11:36:59.000000Z","phone_verified_at":"2023-11-16T11:36:59.000000Z","accept_terms":1,"accept_marketing_offers":1,"is_permanent":0,"reviewed_at":"2023-11-16T11:36:59.000000Z","featured":0,"archived_at":null,"archived_manually_at":null,"deletion_mail_sent_at":null,"fb_profile":null,"partner":null,"created_at":"2023-10-29T03:30:30.000000Z","updated_at":"2023-11-16T12:00:23.000000Z","reference":"GWpmbk5ezJn","slug":"asap-electrician","url":"https:\/\/demo.laraclassifier.local\/asap-electrician\/GWpmbk5ezJn","phone_intl":"3581876675678","created_at_formatted":"2 weeks ago","user_photo_url":"https:\/\/demo.laraclassifier.local\/storage\/avatars\/us\/2\/thumb-800x800-d66ae4e9057bd9248c255be83816379f.jpg","country_flag_url":"https:\/\/demo.laraclassifier.local\/images\/flags\/hexagon\/16\/us.png","price_label":"Price:","price_formatted":"$34","visits_formatted":"16.1K views","distance_info":null,"count_pictures":0,"picture":{"filename":"app\/default\/picture.jpg","url":{"full":"https:\/\/demo.laraclassifier.local\/storage\/app\/default\/picture.jpg","small":"https:\/\/demo.laraclassifier.local\/storage\/app\/default\/picture.jpg","medium":"https:\/\/demo.laraclassifier.local\/storage\/app\/default\/picture.jpg","big":"https:\/\/demo.laraclassifier.local\/storage\/app\/default\/picture.jpg"}},"user":{"id":2,"name":"Admin Demo","username":null,"updated_at":"2023-01-16T16:29:50.000000Z","original_updated_at":"2023-01-16 16:29:50","original_last_activity":null,"created_at_formatted":"1 year ago","photo_url":"https:\/\/demo.laraclassifier.local\/storage\/avatars\/us\/2\/thumb-800x800-d66ae4e9057bd9248c255be83816379f.jpg","p_is_online":false,"country_flag_url":"https:\/\/demo.laraclassifier.local\/images\/flags\/hexagon\/16\/us.png"},"postType":{"id":2,"name":"Professional","active":1},"rating_cache":0,"rating_count":0},"extra":{"fieldsValues":[]}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store listing'
      description: |-
        For both types of listing's creation (Single step or Multi steps).
        Note: The field 'admin_code' is only available when the listing's country's 'admin_type' column is set to 1 or 2.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: "The category's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      title:
        name: title
        description: "The listing's title."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: "The listing's description."
        required: true
        example: 'Beatae placeat atque tempore consequatur animi magni omnis.'
        type: string
        enumValues: []
        custom: []
      contact_name:
        name: contact_name
        description: "The listing's author name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        custom: []
      phone:
        name: phone
        description: "The listing's author mobile number (Required when 'auth_field' value is 'phone')."
        required: false
        example: '+17656766467'
        type: string
        enumValues: []
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: 'null'
        type: string
        enumValues: []
        custom: []
      city_id:
        name: city_id
        description: "The city's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      accept_terms:
        name: accept_terms
        description: 'Accept the website terms and conditions.'
        required: true
        example: false
        type: boolean
        enumValues: []
        custom: []
      pictures:
        name: pictures
        description: "The listing's pictures."
        required: true
        example:
          - null
        type: 'file[]'
        enumValues: []
        custom: []
      email:
        name: email
        description: "The listing's author email address (Required when 'auth_field' value is 'email')."
        required: false
        example: john.doe@domain.tld
        type: string
        enumValues: []
        custom: []
      country_code:
        name: country_code
        description: "The code of the user's country."
        required: true
        example: US
        type: string
        enumValues: []
        custom: []
      post_type_id:
        name: post_type_id
        description: "The listing type's ID."
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
      admin_code:
        name: admin_code
        description: "The administrative division's code."
        required: false
        example: '0'
        type: string
        enumValues: []
        custom: []
      price:
        name: price
        description: 'The price.'
        required: true
        example: 5000
        type: integer
        enumValues: []
        custom: []
      negotiable:
        name: negotiable
        description: 'Negotiable price or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      phone_hidden:
        name: phone_hidden
        description: 'Mobile phone number will be hidden in public or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      create_from_ip:
        name: create_from_ip
        description: "The listing's author IP address."
        required: false
        example: 127.0.0.1
        type: string
        enumValues: []
        custom: []
      accept_marketing_offers:
        name: accept_marketing_offers
        description: 'Accept to receive marketing offers or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      is_permanent:
        name: is_permanent
        description: 'Is it permanent post or no.'
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      tags:
        name: tags
        description: 'Comma-separated tags list.'
        required: false
        example: 'car,automotive,tesla,cyber,truck'
        type: string
        enumValues: []
        custom: []
      package_id:
        name: package_id
        description: "The package's ID."
        required: true
        example: 2
        type: integer
        enumValues: []
        custom: []
      payment_method_id:
        name: payment_method_id
        description: "The payment method's ID (required when the selected package's price is > 0)."
        required: false
        example: 5
        type: integer
        enumValues: []
        custom: []
      captcha_key:
        name: captcha_key
        description: 'Key generated by the CAPTCHA endpoint calling (Required when the CAPTCHA verification is enabled from the Admin panel).'
        required: false
        example: iusto
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      category_id: 1
      title: 'John Doe'
      description: 'Beatae placeat atque tempore consequatur animi magni omnis.'
      contact_name: 'John Doe'
      auth_field: email
      phone: '+17656766467'
      phone_country: 'null'
      city_id: 1
      accept_terms: false
      email: john.doe@domain.tld
      country_code: US
      post_type_id: 1
      admin_code: '0'
      price: 5000
      negotiable: false
      phone_hidden: false
      create_from_ip: 127.0.0.1
      accept_marketing_offers: false
      is_permanent: true
      tags: 'car,automotive,tesla,cyber,truck'
      package_id: 2
      payment_method_id: 5
      captcha_key: iusto
    fileParameters:
      pictures:
        - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k8Z6aD5h3dEVcf4ePba6gv1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}/offline'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Archive a listing'
      description: 'Put a listing offline'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post/listing's ID."
        required: true
        example: 19
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5aDaP4ZV6k3fgbEd8ch6ve1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}/repost'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Repost a listing'
      description: 'Repost a listing by un-archiving it.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post/listing's ID."
        required: true
        example: 6
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vbgEf5Pacde8a6DZhV3146k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update listing'
      description: |-
        Note: The fields 'pictures', 'package_id' and 'payment_method_id' are only available with the single step post edition.
        The field 'admin_code' is only available when the listing's country's 'admin_type' column is set to 1 or 2.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post/listing's ID."
        required: true
        example: 15
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: "The category's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      title:
        name: title
        description: "The listing's title."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: "The listing's description."
        required: true
        example: 'Beatae placeat atque tempore consequatur animi magni omnis.'
        type: string
        enumValues: []
        custom: []
      contact_name:
        name: contact_name
        description: "The listing's author name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        custom: []
      phone:
        name: phone
        description: "The listing's author mobile number (Required when 'auth_field' value is 'phone')."
        required: false
        example: '+17656766467'
        type: string
        enumValues: []
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: 'null'
        type: string
        enumValues: []
        custom: []
      city_id:
        name: city_id
        description: "The city's ID."
        required: true
        example: 6
        type: integer
        enumValues: []
        custom: []
      accept_terms:
        name: accept_terms
        description: 'Accept the website terms and conditions.'
        required: true
        example: false
        type: boolean
        enumValues: []
        custom: []
      email:
        name: email
        description: "The listing's author email address (Required when 'auth_field' value is 'email')."
        required: false
        example: john.doe@domain.tld
        type: string
        enumValues: []
        custom: []
      country_code:
        name: country_code
        description: "The code of the user's country."
        required: true
        example: US
        type: string
        enumValues: []
        custom: []
      post_type_id:
        name: post_type_id
        description: "The listing type's ID."
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
      admin_code:
        name: admin_code
        description: "The administrative division's code."
        required: false
        example: '0'
        type: string
        enumValues: []
        custom: []
      price:
        name: price
        description: 'The price.'
        required: true
        example: 5000
        type: integer
        enumValues: []
        custom: []
      negotiable:
        name: negotiable
        description: 'Negotiable price or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      phone_hidden:
        name: phone_hidden
        description: 'Mobile phone number will be hidden in public or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      latest_update_ip:
        name: latest_update_ip
        description: "The listing's author IP address."
        required: false
        example: 127.0.0.1
        type: string
        enumValues: []
        custom: []
      accept_marketing_offers:
        name: accept_marketing_offers
        description: 'Accept to receive marketing offers or no.'
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      is_permanent:
        name: is_permanent
        description: 'Is it permanent post or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      tags:
        name: tags
        description: 'Comma-separated tags list.'
        required: false
        example: 'car,automotive,tesla,cyber,truck'
        type: string
        enumValues: []
        custom: []
      pictures:
        name: pictures
        description: "The listing's pictures."
        required: true
        example:
          - null
        type: 'file[]'
        enumValues: []
        custom: []
      package_id:
        name: package_id
        description: "The package's ID."
        required: true
        example: 2
        type: integer
        enumValues: []
        custom: []
      payment_method_id:
        name: payment_method_id
        description: "The payment method's ID (Required when the selected package's price is > 0)."
        required: false
        example: 5
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      category_id: 1
      title: 'John Doe'
      description: 'Beatae placeat atque tempore consequatur animi magni omnis.'
      contact_name: 'John Doe'
      auth_field: email
      phone: '+17656766467'
      phone_country: 'null'
      city_id: 6
      accept_terms: false
      email: john.doe@domain.tld
      country_code: US
      post_type_id: 1
      admin_code: '0'
      price: 5000
      negotiable: false
      phone_hidden: false
      latest_update_ip: 127.0.0.1
      accept_marketing_offers: true
      is_permanent: false
      tags: 'car,automotive,tesla,cyber,truck'
      package_id: 2
      payment_method_id: 5
    fileParameters:
      pictures:
        - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86VeE4vZPk3hdf1acb6ag5D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{ids}'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete listing(s)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      ids:
        name: ids
        description: 'The ID or comma-separated IDs list of listing(s).'
        required: true
        example: repellendus
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      ids: repellendus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cP68kVbEhf6adDv4135aeZg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}/verify/resend/email'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Email: Re-send link'
      description: 'Re-send email verification link to the user'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      entityId:
        name: entityId
        description: 'The entity/model identifier (ID).'
        required: false
        example: 0
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
      entityId: 0
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":false,"message":"Your Email Address is already verified.","result":null,"extra":{"emailVerificationSent":false},"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}/verify/resend/sms'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'SMS: Re-send code'
      description: 'Re-send mobile phone verification token by SMS'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      entityId:
        name: entityId
        description: 'The entity/model identifier (ID).'
        required: false
        example: 0
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
      entityId: 0
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":false,"message":"Your Phone Number is already verified.","result":null,"extra":{"phoneVerificationSent":false},"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/verify/{field}/{token?}'
    metadata:
      groupName: Listings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Verification
      description: "Verify the user's email address or mobile phone number"
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      field:
        name: field
        description: 'The field to verify.'
        required: true
        example: email
        type: string
        enumValues: []
        custom: []
      token:
        name: token
        description: 'The verification token.'
        required: false
        example: 'null'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      field: email
      token: 'null'
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"success":false,"message":"Your Email Address verification has failed.","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
